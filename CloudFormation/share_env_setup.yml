AWSTemplateFormatVersion: "2010-09-09"
Description: Setup for data transfer between S3 bucket accounts

Resources:
  CreateUser:
    Type: AWS::IAM::User
    Properties:
      UserName: S3-data-transfer
  CreateShareS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: data-share-only
  CreateAthenaUnloadPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "s3BucketListAllAccess"
            Effect: "Allow"
            Action: "s3:ListAllMyBuckets"
            Resource: "*"
          - Sid: "AthenaS3Access"
            Effect: "Allow"
            Action: 
              - "s3:GetObject"
              - "s3:GetBucketLocation"
              - "s3:ListBucket"
              - "s3:ListBucketMultipartUploads"
              - "s3:ListMultipartUploadParts"
              - "s3:AbortMultipartUpload"
              - "s3:PutObject"
              - "s3:DeleteObject"
            Resource: 
              - "arn:aws:s3:::query-results-bucker/*"
              - "arn:aws:s3:::query-results-bucker"
              - "arn:aws:s3:::quark-sandbox/*"
              - "arn:aws:s3:::quark-sandbox"
              - "arn:aws:s3:::data-share-only/*"
              - "arn:aws:s3:::data-share-only"
          - Sid: "AthenaAccess"
            Effect: "Allow"
            Action: 
              - "athena:ListEngineVersions"
              - "athena:ListWorkGroups"
              - "athena:ListDataCatalogs"
              - "athena:ListDatabases"
              - "athena:GetDatabase"
              - "athena:ListTableMetadata"
              - "athena:GetTableMetadata"
            Resource: "*"
          - Sid: "AthenaWorkgroupAccess"
            Effect: "Allow"
            Action: 
              - "athena:GetWorkGroup"
              - "athena:BatchGetQueryExecution"
              - "athena:GetQueryExecution"
              - "athena:ListQueryExecutions"
              - "athena:StartQueryExecution"
              - "athena:StopQueryExecution"
              - "athena:GetQueryResults"
              - "athena:GetQueryResultsStream"
              - "athena:CreateNamedQuery"
              - "athena:GetNamedQuery"
              - "athena:BatchGetNamedQuery"
              - "athena:ListNamedQueries"
              - "athena:DeleteNamedQuery"
              - "athena:CreatePreparedStatement"
              - "athena:GetPreparedStatement"
              - "athena:ListPreparedStatements"
              - "athena:UpdatePreparedStatement"
              - "athena:DeletePreparedStatement"
            Resource: 
              - !Sub "arn:aws:athena:${AWS::Region}:${AWS::AccountId}:workgroup/primary"
          - Sid: "glueReadOnlyAccess"
            Effect: "Allow"
            Action: 
              - "glue:GetTable"
              - "glue:GetTables"
              - "glue:GetDatabase"
              - "glue:GetDataBases"
              - "glue:GetPartition"
              - "glue:GetPartitions"
            Resource: "*"
      ManagedPolicyName: AmazonS3ShareBucketAccess
      Users:
        - !Ref CreateUser
  CreateTransferBucketPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - Sid: "AthenaS3Access"
            Effect: "Allow"
            Action: 
              - "s3:ListBucket"
              - "s3:PutObject"
            Resource: 
              - "arn:aws:s3:::s3-share-data-receive/*"
              - "arn:aws:s3:::s3-share-data-receive"
      ManagedPolicyName: AmazonS3TransferData
      Users:
        - !Ref CreateUser
  CreateS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - Sid: "S3DenyOptionForNotShareUser"
            Effect: "Deny"
            Principal: "*"
            NotAction: 
              - "s3:ListBucket"
              - "s3:GetObject"
              - "s3:ListBucketMultipartUploads"
              - "s3:GetBucketLocation"
            Resource: 
              - "arn:aws:s3:::data-share-only/*"
              - "arn:aws:s3:::data-share-only"
            Condition: 
              ArnNotEquals: 
                aws:PrincipalArn: 
                  - !Sub "arn:aws:iam::${AWS::AccountId}:user/S3-data-transfer"
      Bucket: !Ref CreateShareS3Bucket
